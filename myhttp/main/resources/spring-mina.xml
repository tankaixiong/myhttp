<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:redis="http://www.springframework.org/schema/redis" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans	
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 	 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/redis 
		http://www.springframework.org/schema/redis/spring-redis.xsd
		http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring   
  		http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">


	<context:component-scan base-package="tank.*" />


	<task:annotation-driven scheduler="taskScheduler" />
	<task:scheduler id="taskScheduler" pool-size="2" />



	<!-- 扩展各种自定义的属性编辑器 -->
	<bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="customEditors">
			<map>
				<entry key="java.net.SocketAddress" value="org.apache.mina.integration.beans.InetSocketAddressEditor" />
				<entry key="java.nio.charset.Charset" value="tank.myhttp.CharsetEditor" />

			</map>
		</property>
	</bean>

	<!-- 线程 -->
	<bean id="executorFilter" class="org.apache.mina.filter.executor.ExecutorFilter">
		<constructor-arg>
			<bean id="threadPool" class="java.util.concurrent.Executors" factory-method="newCachedThreadPool" />
		</constructor-arg>
	</bean>

	<!-- log4j 的mdc功能，把你要记录的信息加入到log4j日志中 选项有 handlerClass, remoteAddress, localAddress, remoteIp, remotePort, localIp, localPort -->
	<bean id="mdcInjectionFilter" class="org.apache.mina.filter.logging.MdcInjectionFilter">
		<constructor-arg>
			<set>
				<value>handlerClass</value>
				<value>remoteAddress</value>
				<value>localAddress</value>
				<value>remoteIp</value>
				<value>remotePort</value>
				<value>localIp</value>
				<value>localPort</value>
			</set>
		</constructor-arg>
	</bean>

	<bean id="loggingFilter" class="org.apache.mina.filter.logging.LoggingFilter" />


	<!-- http相关 -->
	<bean id="httpServerCodec" class="org.apache.mina.http.HttpServerCodec"></bean>
	
	<bean id="httpFilterChainBuilder" class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder">
		<property name="filters">
			<map>
				<entry key="codecFilter" value-ref="httpServerCodec" />
				<entry key="executor" value-ref="executorFilter" />
				<entry key="mdcInjectionFilter" value-ref="mdcInjectionFilter" />
			</map>
		</property>
	</bean>
	<bean id="httpSocketAcceptor" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor" init-method="bind" destroy-method="unbind">
		<property name="defaultLocalAddress" value=":80" />
		<property name="handler" ref="httpHandlerAdapter" />
		<property name="reuseAddress" value="true" />
		<property name="filterChainBuilder" ref="httpFilterChainBuilder" />
	</bean>


</beans>